<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/adminAssets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/adminAssets/css/main.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

  <style>
    .filter-button.active {
    background-color: #007bff; /* Example color */
    color: white;
    border-color: #007bff;
}

  </style>
</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="/admin/salesReport" class="brand-wrap">
                <img src="/userAssets/imgs/page/book1.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
            <nav>
                <ul class="menu-aside">
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                            <span class="text">Dashboard</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link"  href="/admin/category"> <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Catagory</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/order"> <i class="icon material-icons md-shopping_cart"></i>
                            <span class="text">Orders</span>
                        </a>
                        
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/userlist"> <i class="icon material-icons md-person"></i>
                            <span class="text">Users</span>
                        </a>
                     
                        </div>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-store"></i>
                            <span class="text">Products</span>
                        </a>
                       
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/coupon"> <i class="icon material-icons md-add_box"></i>
                            <span class="text">Coupons</span>
                        </a>
                        
                    </li>
                    <li class="menu-item active ">
                        <a class="menu-link" href="/admin/salesReport"> <i class="icon material-icons md-monetization_on"></i>
                            <span class="text">Sales Report</span>
                        </a>
                       
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/logout"> <i class="icon material-icons md-person"></i>
                            <span class="text">Logout</span>
                        </a> 

                   
                </ul>
                <hr>
                
                <br>
                <br>
            </nav>
    </aside>

    <main class="main-wrap">
        <section class="content-main">
            <div class="content-header">
                <h2 class="content-title">Total Sales</h2>
                <div>
                    <button type="button" class="btn btn-primary" id="downloadExcelButton">
                        <i class="material-icons md-plus"></i> Download Excel
                    </button>
                </div>
                <div>
                    <button type="button" class="btn btn-primary" id="downloadPdfButton">
                        <i class="material-icons md-plus"></i> Download PDF
                    </button>
                </div>
            </div>
            <div class="card mb-4">
                <div class="card-body">
                    <div class="table-responsive">
                        <div class="mb-3">
                            <button type="button" class="btn btn-outline-primary mr-5 filter-button" id="dailyButton">Daily</button>
                            <button type="button" class="btn btn-outline-primary mr-5 filter-button" id="weeklyButton">Weekly</button>
                            <button type="button" class="btn btn-outline-primary mr-5 filter-button" id="monthlyButton">Monthly</button>
                            <button type="button" class="btn btn-outline-primary mr-5 filter-button" id="yearlyButton">Yearly</button>
                            <div class="d-inline-block" style="width: auto;">
                                <label for="startDate">Start:</label>
                                <input type="date" id="startDate" class="form-control d-inline-block" style="width: auto;">
                            </div>
                            <div class="d-inline-block" style="width: auto;">
                                <label for="endDate">End:</label>
                                <input type="date" id="endDate" class="form-control d-inline-block mr-2" style="width: auto;">
                            </div>
                            <button type="button" class="btn btn-outline-primary filter-button" id="filterButton">Filter</button>
                        </div>
                        
                        <table class="table table-hover table-bordered" id="order-table">
                            <thead style="background-color: #088178; color: white;">
                                <tr>
                                    <th>Date</th>
                                    <th>Order No.</th>
                                    <th>Customer</th>
                                    <th>Products</th>
                                    <th>Quantity Sold</th>
                                    <th>Price</th>
                                    <th>Discount Amount</th>
                                    <th class="text-end">Total Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% order.forEach(orders => { %>
                                    <tr>
                                        <td><%= new Date(orders.orderDate).toLocaleDateString() %></td>
                                        <td><%= orders.orderId %></td>
                                        <td><%= orders.user.name %></td>
                                        <td>
                                            <% orders.items.forEach(item => { %>
                                                <div class="product-item"><%= item.name %></div>
                                            <% }) %>
                                        </td>
                                        <td>
                                            <% orders.items.forEach(item => { %>
                                                <div class="product-item"><%= item.quantity %></div>
                                            <% }) %>
                                        </td>
                                        <td>
                                            <% orders.items.forEach(item => { %>
                                                <div class="product-item"><%= item.productPrice.toFixed(2) %></div>
                                            <% }) %>
                                        </td>
                                        <!-- <td><%= orders.couponId ? orders.couponAmount.toFixed(2) : '0.00' %></td> -->
                                            <!-- <td> <%= orders.couponId && orders.couponAmount ? orders.couponAmount.toFixed(2) : '0.00' %> </td> -->
                                            <td><%= orders.couponAmount.toFixed(2) %></td>


                                        <td class="text-end"><%= orders.billTotal.toFixed(2) %></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                            <tfoot>
                                <tr class="summary-row">
                                    <td colspan="6">Total Discount Amount:</td>
                                    <td id="total-discount"><%= totalDiscountAmount %></td>
                                    <td id="total-sales-amount" class="text-end"><%= totalSalesAmount %></td>
                                </tr>
                                <tr class="summary-row">
                                    <td colspan="8">Sales Count: <span id="sales-count"><%= totalSalesCount %></span></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
    
            <div class="pagination-area mt-15 mb-50">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-start">
                        <% if (currentPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                            </li>
                        <% } %>
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                        <% if (currentPage < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
        </section>
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                        document.write(new Date().getFullYear())
                    </script> ©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    


    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
    <script>
  
    
    
        document.addEventListener("DOMContentLoaded", function() {
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('startDate').setAttribute('max', today);
        document.getElementById('endDate').setAttribute('max', today);
    });
    
        document.addEventListener('DOMContentLoaded', () => {
        let dailyFilter = document.getElementById("dailyButton");
        let weeklyFilter = document.getElementById("weeklyButton");
        let monthlyFilter = document.getElementById("monthlyButton");
        let yearlyFilter = document.getElementById("yearlyButton");
        let customFilterButton = document.getElementById("filterButton");

        const buttons = [dailyFilter, weeklyFilter, monthlyFilter, yearlyFilter, customFilterButton];

buttons.forEach(button => {
    button.addEventListener("click", function() {
        // Remove 'active' class from all buttons
        buttons.forEach(btn => btn.classList.remove('active'));

        // Add 'active' class to the clicked button
        this.classList.add('active');

        // Apply your custom filter logic here
        applyFilter();
    });
});
    
        dailyFilter.addEventListener("click", applyFilter);
        weeklyFilter.addEventListener("click", applyFilter);
        monthlyFilter.addEventListener("click", applyFilter);
        yearlyFilter.addEventListener("click", applyFilter);
        customFilterButton.addEventListener("click", applyFilter);
    });
    
    let activeButton;
    let page=1;
        function applyFilter(event,page) {
            let filterType;
    
            console.log(page);
    
    // Check if the event is triggered by a button or a pagination link
    if (event.target.id) {
        filterType = event.target.id.replace('Button', '').toLowerCase();
        activeButton = event.target; // Store the active button element
    } else if (event.target.getAttribute('data-filter-type')) {
        filterType = event.target.getAttribute('data-filter-type');
        // Retrieve the button element by ID only if not already set
        activeButton = activeButton || document.getElementById(filterType + 'Button');
    }
    
    console.log(`Filter Type: ${filterType}`);
    
        const startDateElement = document.getElementById("startDate");
        const endDateElement = document.getElementById("endDate");
            
        let start = startDateElement ? startDateElement.value : '';
        let end = endDateElement ? endDateElement.value : '';
    
        
       
    
    
        fetch(`/admin/filterReport?filterType=${filterType}&startDate=${start}&endDate=${end}&page=${page}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`Network response was not ok: ${response.statusText}`);
            }
            return response.json();
        })
        .then(data => {
          
            updateTable(data.orders);
            updateSummary(data.totalDiscount, data.totalSalesAmount, data.salesCount);
            updatePagination(data.currentPage, data.totalPages, filterType, start, end);
            setActiveFilterButton(activeButton);
        })
        .catch(error => console.error('Error:', error));
    }
    
    
    function setActiveFilterButton(activeButton) {
        console.log(activeButton);
            document.querySelectorAll('.filter-button').forEach(button => {
                button.classList.remove('active');
            });
            activeButton.classList.add('active');
        }
    
        function updateTable(orders) {
            const tbody = document.querySelector("#order-table tbody");
            tbody.innerHTML = ''; // Clear existing rows
    
            orders.forEach(order => {
                let row = document.createElement('tr');
    
                let orderDate = new Date(order.orderDate).toLocaleDateString();
                let orderId = order.orderId;
                let customer = order.user.name;
                let products = order.items.map(item => `<div class="product-item">${item.title}</div>`).join('');
                let quantities = order.items.map(item => `<div class="product-item">${item.quantity}</div>`).join('');
                let prices = order.items.map(item => `<div class="product-item">${item.productPrice.toFixed(2)}</div>`).join('');
                let discountAmount = order.couponAmount ? order.couponAmount.toFixed(2) : '0.00';
                let totalPrice = order.billTotal.toFixed(2);
    
                row.innerHTML = `
                    <td>${orderDate}</td>
                    <td>${orderId}</td>
                    <td>${customer}</td>
                    <td>${products}</td>
                    <td>${quantities}</td>
                    <td>${prices}</td>
                    <td>${discountAmount}</td>
                    <td class="text-end">${totalPrice}</td>
                `;
    
                tbody.appendChild(row);
            });
        }
    
        function updateSummary(totalDiscount, totalSalesAmount, salesCount) {
            document.getElementById('total-discount').textContent = totalDiscount.toFixed(2);
            document.getElementById('total-sales-amount').textContent = totalSalesAmount.toFixed(2);  
            document.getElementById('sales-count').textContent = salesCount;
        }
    
        function updatePagination(currentPage, totalPages, filterType, startDate, endDate) {  
            const paginationArea = document.querySelector('.pagination');
            paginationArea.innerHTML = ''; // Clear existing pagination
    
            if (currentPage > 1) {
                paginationArea.innerHTML += `
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="applyFilter({ target: { id: '${filterType}Button' } }, ${currentPage - 1})">Previous</a>
                    </li>
                `;
            }
    
            for (let i = 1; i <= totalPages; i++) {
                paginationArea.innerHTML += `
                    <li class="page-item ${currentPage === i ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="applyFilter({ target: { id: '${filterType}Button' } }, ${i})">${i}</a>
                    </li>
                `;
            }
    
            if (currentPage < totalPages) {
                paginationArea.innerHTML += `
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="applyFilter({ target: { id: '${filterType}Button' } }, ${currentPage + 1})">Next</a>
                    </li>
                `;
            }
            setActiveFilterButton(activeButton); 
        }
    
        
        const downloadPdf = document.getElementById('downloadPdfButton');
    
    downloadPdf.addEventListener('click', () => {
        console.log("pdf",activeButton);
        const filterType = activeButton ? activeButton.id.replace('Button', '').toLowerCase() : 'daily';
        console.log(filterType);
    
    
         const startDateElement = document.getElementById("startDate");
        const endDateElement = document.getElementById("endDate");
    
        const currentPage = document.querySelector('.pagination .page-item.active') ? 
            document.querySelector('.pagination .page-item.active .page-link').textContent : 1;
    
            console.log("checking",currentPage);
    
            
        let startDate = startDateElement ? startDateElement.value : '';
        let endDate = endDateElement ? endDateElement.value : '';
        console.log("start:",startDate);
        console.log("end:",endDate);
    
        const queryParams = new URLSearchParams({
            filterType,
            startDate,
            endDate,
            page:currentPage
        });
    
        window.location.href = `/admin/downloadPdf?${queryParams.toString()}`;
    });
    
    const downloadExcel = document.getElementById('downloadExcelButton');
    
    downloadExcel.addEventListener('click', () => {
        console.log("pdf",activeButton);
        const filterType = activeButton ? activeButton.id.replace('Button', '').toLowerCase() : 'daily';
        console.log(filterType);
    
    
         const startDateElement = document.getElementById("startDate");
        const endDateElement = document.getElementById("endDate");
    
        const currentPage = document.querySelector('.pagination .page-item.active') ? 
            document.querySelector('.pagination .page-item.active .page-link').textContent : 1;
    
            console.log("checking",currentPage);
    
            
        let startDate = startDateElement ? startDateElement.value : '';
        let endDate = endDateElement ? endDateElement.value : '';
        console.log("start:",startDate);
        console.log("end:",endDate);
    
        const queryParams = new URLSearchParams({
            filterType,
            startDate,
            endDate,
            page:currentPage
        });
    
        window.location.href = `/admin/downloadExcel?${queryParams.toString()}`;
    });
    </script>








        
 </body>