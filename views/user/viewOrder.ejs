<%- include('../partials/header.ejs') %>

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" href="/userAssets/css/main.css"> 

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #e9ecef;
        margin: 0;
        padding: 0;
    }
    h1 {
        text-align: center;
        margin-top: 20px;
        color: #343a40;
    }
    table {
        width: 95%;
        margin: 20px auto;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }
    th, td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #dee2e6;
    }
    th {
        background-color: #f8f9fa;
        color: #495057;
        font-weight: bold;
    }
    td img {
        border-radius: 5px;
    }
    td:last-child {
        text-align: center;
    }
    a {
        color: #007bff;
        text-decoration: none;
        transition: color 0.3s;
    }
    a:hover {
        color: #0056b3;
    }
    button {
        cursor: pointer;
        border: none;
        border-radius: 5px;
        color: #ffffff;
        padding: 10px 20px;
        font-size: 14px;
        transition: background-color 0.3s;
        outline: none;
    }
    .btn-cancel {
        background-color: #dc3545;
        border-color: #dc3545;
    }
    .btn-cancelled {
        background-color: #6c757d;
        border-color: #6c757d;
        color: white;
        cursor: not-allowed;
    }
    .btn-return {
        background-color: #ffc107;
        border-color: #ffc107;
    }
    #summary-table {
        width: 95%;
        margin: 20px auto;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }
    #summary-table th, #summary-table td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #dee2e6;
    }
    #summary-table th {
        background-color: #f8f9fa;
        color: #495057;
        font-weight: bold;
    }
    .action-buttons {
        text-align: center;
        margin: 20px auto;
    }
    .action-buttons button {
        margin: 0 10px;
    }
</style>
<body>
    <h1>Order Details</h1>
    <table>
        <thead>
            <tr>
                <th>Order Date</th>
                <th>Product Details</th>
                <th>Order Status</th>
                <th>Payment Status</th>
                <th>Payment Method</th>
                <th>Product Price</th>
                <th>Quantity</th>
                <th>Total Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <% order.items.forEach(item => { %>
                <tr>
                    <td><%= order.orderDate.toDateString() %></td>
                    <!-- <td><img src="/uploads/<%= item.image[0] %>" alt="Product Image" style="width: 100px; height: 120px;"></td> -->
                    <td><%= item.name || 'Product' %></td>
                    <td data-input-id="<%= item._id %>"><%= item.status %></td>
                    <td><%= order.paymentStatus %></td>
                    <td><%= order.paymentMethod %></td>
                    <td>₹<%= item.productPrice.toFixed(2) %></td>
                    <td><%= item.quantity %></td>
                    <td>₹<%= (item.productPrice * item.quantity).toFixed(2) %></td>
                    <td>
                        <% if(item.status==="Delivered") {%>
                            <button onclick="showReturnConfirmation('<%= order._id %>', '<%= item._id %>')" data-input-id="<%= item._id %>" style="background-color: #FF6B6B; border-color:  #FF6B6B; color: white;">Return</button>
                        <%}%>
                        <% if (item.status!="Cancelled") { %>
                            <% if (item.status === 'Pending' || item.status === 'Confirmed') { %>
                                <button onclick="showCancelConfirmation('<%= order._id %>', '<%= item._id %>')" data-input-id="<%= item._id %>" style="background-color: #FF6B6B; border-color:  #FF6B6B; color: white; " >Cancel</button>
                            <% } else { %>
                                -
                            <% } %>
                        <%} else { %>
                            <button onclick="showCancelConfirmation('<%= order._id %>', '<%= item._id %>')" data-input-id="<%= item._id %>" style="background-color: #FF6B6B; border-color:  #FF6B6B; color: white;" disabled >Order Cancelled</button>
                        <% } %>
                    </td>
                </tr>
            <% }); %>
        </tbody>

       


      

         
    </table>

    

    <table id="summary-table">
        <tbody>
            <tr>
                <th>Grand Total</th>
                <td id="grandTotal">₹<%= order.billTotal.toFixed(2) %></td>
            </tr>
            <tr>
                <th>Shipping Address</th>
                <td id="shippingAddress">
                    <%= order.shippingAddress.houseName %>,<br>
                    <%= order.shippingAddress.street %>,<br>
                    <%= order.shippingAddress.city %>,<br>
                    <%= order.shippingAddress.state %>,<br>
                    <%= order.shippingAddress.country %> - <%= order.shippingAddress.postalCode %>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="action-buttons">
        <!-- Removed retry payment and download invoice buttons as per request -->
    </div>
</body>

<%- include("../partials/footer.ejs") %>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    

    function showCancelConfirmation(orderId, itemId) {
    Swal.fire({
        title: 'Cancel Order',
        text: 'Are you sure you want to cancel this order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
        if (result.isConfirmed) {
            cancelOrder(orderId, itemId);
        }
    });
}

    // async function cancelOrder(orderId, itemId) {
    //     try {
    //         const response = await fetch('/cancelOrder', {
    //             method: 'POST',
    //             headers: {
    //                 'Content-Type': 'application/json'
    //             },
    //             body: JSON.stringify({ orderId, itemId})
    //         });
    //         const data = await response.json();
    //         if (response.ok) {
    //             Swal.fire('Order Cancelled', data.message, 'success');
    //             document.querySelector(`[data-input-id="${itemId}"]`).textContent = 'Cancelled';
    //             const cancelButton = document.querySelector(`button[data-input-id="${itemId}"]`);
    //             cancelButton.innerHTML = 'Order Cancelled';
    //             cancelButton.disabled = true;
    //             location.reload();
    //         } else {
    //             Swal.fire('Error', data.message, 'error');  
    //         }
    //     } catch (error) {
    //         console.error('Error:', error);
    //         Swal.fire('Error', 'An error occurred while cancelling the order', 'error');
    //     }
    // }


    async function cancelOrder(orderId, itemId, cancellationReason) {
    try {
        const response = await fetch('/cancelOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ orderId, itemId, cancellationReason })
        });
        const data = await response.json();
        if (response.ok) {
            Swal.fire('Order Cancelled', data.message, 'success');
            document.querySelector(`[data-input-id="${itemId}"]`).textContent = 'Cancelled';
            const cancelButton = document.querySelector(`button[data-input-id="${itemId}"]`);
            cancelButton.innerHTML = 'Order Cancelled';
            cancelButton.disabled = true;
            location.reload();
        } else {
            Swal.fire('Error', data.message, 'error');
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire('Error', 'An error occurred while cancelling the order', 'error');
    }
}










    function showReturnConfirmation(orderId, itemId) {
        Swal.fire({
            title: 'Return Order',
            html: 'Are you sure you want to return this order?<br><input type="text" id="returnReason" class="swal2-input" placeholder="Enter rearon for returning">',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, return it!',
            cancelButtonText: 'No, keep it'
        }).then((result) => {
            if (result.isConfirmed) {
                const returnReason = document.getElementById('returnReason').value;
                // Call a function to handle order cancellation
                returnOrder(orderId, itemId, returnReason);
            }
        });
    }

    async function returnOrder(orderId, itemId,) {
        try {
            const response = await fetch('/returnOrder', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId, itemId,})
            });
            const data = await response.json();
            if (response.ok) {
                // Handle success
                Swal.fire('Order Returned', data.message, 'success');
                location.reload()
              
            } else {
                // Handle error
                Swal.fire('Error', data.message, 'error');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire('Error', 'An error occurred while cancelling the order', 'error');
        }
       
    }
    







   
// </script>

