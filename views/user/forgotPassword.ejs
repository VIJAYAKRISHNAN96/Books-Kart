




<%- include("../partials/header.ejs") %>


<main class="main">
  <div class="page-header breadcrumb-wrap">
      <div class="container">
          <div class="breadcrumb">
              <a href="/" rel="nofollow">Home</a>
              <span></span> Forgot Password
          </div>
      </div>
  </div>
  <section class="pt-150 pb-150 d-flex align-items-center justify-content-center" style="min-height: 100vh;">
      <div class="container">
          <div class="row justify-content-center">
              <div class="col-lg-5">
                  <div class="login_wrap widget-taber-content p-30 background-white border-radius-10">
                      <div class="padding_eight_all bg-white">
                          <div class="heading_s1">
                              <h3 class="mb-30" style="text-align: center;" >Forgot Password</h3>
                          </div>
                          <p class="mb-50 font-sm">
                              Please enter your email address below, and we will send you an OTP to reset your password.
                          </p>
                          <form id="emailForm" action="/forgotPassword" method="post">
                              <div class="form-group">
                                  <input type="email" name="email" placeholder="Enter your email" required>
                                  <span class="error" id="emailError"></span>
                              </div>
                              <div class="form-group">
                                  <button type="submit" class="btn btn-fill-out btn-block hover-up" name="sendOtp">Send OTP</button>
                              </div>
                          </form>
                          <form id="resetForm" action="/resetPass" method="post" style="display: none;">
                              <div class="form-group">
                                  <input type="text" name="otp" placeholder="Enter OTP" required>
                                  <span class="error" id="otpError"></span>
                              </div>
                              <div class="form-group">
                                  <input type="password" name="newPassword" placeholder="Enter new password" required>
                                  <span class="error" id="newPasswordError"></span>
                              </div>
                              <div class="form-group">
                                  <button type="submit" class="btn btn-fill-out btn-block hover-up" name="resetPassword">Reset Password</button>
                              </div>
                          </form>
                          <div class="text-muted text-center">Remember your password? <a href="/login">Sign in now</a></div>
                      </div>
                  </div>
              </div>
          </div>
      </div>
  </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
  // Handle Forgot Password form submission
  document.getElementById('emailForm').addEventListener('submit', function(event) {
      event.preventDefault();
      const formData = new FormData(this);
      const email = formData.get('email');

      fetch('/forgotPassword', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email })
      })
      .then(response => response.json())
      .then(data => {
          if (data.messageType === 'success') {
              localStorage.setItem('resetEmail', email);
              // Hide the email form and show the reset form
              this.style.display = 'none';
              document.getElementById('resetForm').style.display = 'block';
              
              Swal.fire({
                  icon: 'success',
                  title: 'OTP Sent',
                  text: data.message,
                  confirmButtonColor: '#28a745'
              });
          } else {
              Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: data.message,
                  confirmButtonColor: '#dc3545'
              });
          }
      })
      .catch(error => {
          console.error('Error:', error);
          Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'An error occurred while sending the OTP.',
              confirmButtonColor: '#dc3545'
          });
      });
  });

  // Handle Reset Password form submission
  document.getElementById('resetForm').addEventListener('submit', function(event) {
      event.preventDefault();
      const formData = new FormData(this);
      const otp = formData.get('otp');
      const newPassword = formData.get('newPassword');
      const email = localStorage.getItem('resetEmail');

      fetch('/resetPass', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ otp, newPassword, email })
      })
      .then(response => response.json())
      .then(data => {
          if (data.messageType === 'success') {
              Swal.fire({
                  icon: 'success',
                  title: 'Success!',
                  text: 'Password has been reset successfully.',
                  confirmButtonColor: '#28a745'
              }).then(result => {
                  if (result.isConfirmed) {
                      window.location.href = '/login';
                  }
              });
          } else {
              Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: data.message,
                  confirmButtonColor: '#dc3545'
              });
          }
      })
      .catch(error => {
          console.error('Error:', error);
          Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'An error occurred while resetting the password.',
              confirmButtonColor: '#dc3545'
          });
      });
  });
</script>

















<!-- <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  const emailForm = document.getElementById('emailForm');
const resetForm = document.getElementById('resetForm');

emailForm.addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(emailForm);
    const formDataObj = Object.fromEntries(formData.entries());

    fetch('/forgotPassword', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formDataObj)
    }).then(response => response.json()).then(data => {
        if (data.messageType === 'success') {
            localStorage.setItem('resetEmail', formDataObj.email);
            document.getElementById('resetEmail').value = formDataObj.email;
            emailForm.style.display = 'none';
            resetForm.style.display = 'block';
            Swal.fire({
                icon: 'success',
                title: 'OTP Sent',
                text: data.message,
                confirmButtonColor: '#28a745'
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.message,
                confirmButtonColor: '#dc3545'
            });
        }
    });
});

resetForm.addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(resetForm);
    const formDataObj = Object.fromEntries(formData.entries());
    
    formDataObj.email = localStorage.getItem('resetEmail');

    fetch('/resetPass', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formDataObj)
    }).then(response => response.json())
    .then(data => {
        if (data.messageType === 'success') {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Password has been reset successfully',
                confirmButtonColor: '#28a745'
            }).then((result) => {
                if (result.isConfirmed) {
                    localStorage.removeItem('resetEmail');
                    window.location.href = '/login';
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.message,
                confirmButtonColor: '#dc3545'
            });
        }
    }).catch(error => {
        console.error('Error fetching:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while resetting the password.',
            confirmButtonColor: '#dc3545'
        });
    });
});
</script> -->


<!-- <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> -->

<!-- <script>
  const emailForm = document.getElementById('emailForm');
  const resetForm = document.getElementById('resetForm');

  emailForm.addEventListener('submit', function(event) {
      event.preventDefault();
      const formData = new FormData(emailForm);
      const formDataObj = Object.fromEntries(formData.entries());
      console.log('Email form data:', formDataObj);

      

      fetch('/forgotPassword', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(formDataObj)
      }).then(response => response.json()).then(data => {
          if (data.messageType === 'success') {
              emailForm.style.display = 'none';
              resetForm.style.display = 'block';
              Swal.fire({
                  icon: 'success',
                  title: 'OTP Sent',
                  text: data.message,
                  confirmButtonColor: '#28a745'
              });
          } else {
              Swal.fire({
                  icon: 'error',
                  title: 'Oops...',
                  text: data.message,
                  confirmButtonColor: '#dc3545'
              });
          }
      }).catch(error => {
          console.error('Error:', error);
          Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'An error occurred while sending the OTP.',
              confirmButtonColor: '#dc3545'
          });
      });
  });

  resetForm.addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(resetForm);
    const formDataObj = Object.fromEntries(formData.entries());
    console.log('Reset form data:', formDataObj);

    fetch('/resetPass', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formDataObj)
    }).then(response => response.json())
    .then(data => {
        if (data.messageType === 'success') {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Password has been reset successfully.',
                confirmButtonColor: '#28a745'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/login'; // Redirect to login page
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.message,
                confirmButtonColor: '#dc3545'
            });
        }
    }).catch(error => {
        console.error('Error fetching:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while resetting the password.',
            confirmButtonColor: '#dc3545'
        });
    });
  });
</script> -->

























<!-- <script>
  const emailForm = document.getElementById('emailForm');
  const resetForm = document.getElementById('resetForm');

  emailForm.addEventListener('submit', function(event) {
      event.preventDefault();
      const formData = new FormData(emailForm);
      const formDataObj = Object.fromEntries(formData.entries());

      fetch('/forgotPassword', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(formDataObj)
      }).then(response => response.json()).then(data => {
          if (data.messageType === 'success') {
              emailForm.style.display = 'none';
              resetForm.style.display = 'block';
          } else {
              alert(data.message);
          }
      });
  });

  resetForm.addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(resetForm);
    const formDataObj = Object.fromEntries(formData.entries());

    fetch('/resetPass', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formDataObj)
    }).then(response => response.json())
    .then(data => {
        if (data.messageType === 'success') {
            alert('Password has been reset successfully');
            window.location.href = '/login'; // Redirect to login page
        } else {
            alert(data.message);
        }
    }).catch(error => {
        console.error('Error fetching:', error);
        alert('An error occurred while resetting the password.');
    });
});




  // resetForm.addEventListener('submit', function(event) {
  //     event.preventDefault();
  //     const formData = new FormData(resetForm);
  //     const formDataObj = Object.fromEntries(formData.entries());

  //     fetch('/resetPassword', {
  //         method: 'POST',
  //         headers: {
  //             'Content-Type': 'application/json'
  //         },
  //         body: JSON.stringify(formDataObj)
  //     }).then(response => response.json()).then(data => {
  //         if (data.messageType === 'success') {
  //             alert('Password has been reset successfully');
  //             window.location.href = '/login'; // Redirect to login page
  //         } else {
  //             alert(data.message);
  //         }
  //     });
  // });
</script> -->